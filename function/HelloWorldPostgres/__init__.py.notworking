import logging
import azure.functions as func
import json
from json import JSONEncoder
import os
from . import settings
import psycopg2
from psycopg2 import Error

def main(req: func.HttpRequest) -> func.HttpResponse:
    
    # Update connection string information
    host = settings.POSTGRES_SERVER_NAME
    dbname = settings.POSTGRES_DB
    user = settings.POSTGRES_USER
    password = settings.POSTGRES_PW
    sslmode = "require"

    # Construct connection string
    conn_string = "host={0} user={1} dbname={2} password={3} sslmode={4}".format(host, user, dbname, password, sslmode)

    logging.info('Python HTTP trigger function processed a request.')

    


    if req.method == 'GET':

        # Connect to DB
        try:
            conn = psycopg2.connect(conn_string)
            logging.info("Connection established")
            cursor = conn.cursor()
        except (Exception, Error) as error:
            logging.info("Error while connecting to PostgreSQL", error)
        
        # Get attendees
        try:
            attendee = cursor.execute("SELECT * FROM attendee;")
            rows = attendee.fetchall()

            # Print all rows
            for row in rows:
                logging.info("Data row = (%s, %s, %s)" %(str(row[0]), str(row[1]), str(row[2])))

        except (Exception, Error) as error:
            logging.info("Error while selecting data", error)

        # Get notification message and subject from database using the notification_id
        # Mock that the notification_id is 6
        # cur.execute("SELECT message,subject FROM notification WHERE id=%s;",(notification_id,))
        try:
            notification_id = 6
            #message = cursor.execute("SELECT message,subject FROM notification WHERE id=%s;",(notification_id,))
            message = cursor.execute("SELECT * FROM notification")
            rows = message.fetchall()

            # Print all rows
            for row in rows:
                logging.info("Data row = (%s, %s)" %(str(row[0]), str(row[1])))
                #print("Data row = (%s, %s, %s)" %(str(row[0]), str(row[1]), str(row[2])))

        except (Exception, Error) as error:
            logging.info("Error while selecting data", error)

        return func.HttpResponse("Done!")